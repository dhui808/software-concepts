In Docker Desktop for Windows, the user needs to added by admin user to docker-users group

Log in
  docker login -u <username> -p <password>

Log out
  docker logout

Build Docker imgage
docker build -t dannyhui/servicevirtualizationservlet .
docker push docker.io/dannyhui/servicevirtualizationservlet
docker run -d -p 8080:8080 -p 5005:5005 -t dannyhui/servicevirtualizationservlet

docker ps

docker container stop f63221907dc0

To stop all containers:
docker container stop $(docker container ls -aq)
To remove all containers:
docker container rm $(docker container ls -aq)
To remove all containers, including their volumes:
docker rm -vf $(docker ps -aq)
To delete all images:
docker rmi -f $(docker images -a -q)

Vert.x
git clone https://github.com/dhui808/service-virtualization-vertx.git
cd /service-virtualization-vertx/servicevirtualizationvertx/
mvn clean install
docker build -t dannyhui/servicevirtualizationvertx .
docker push docker.io/dannyhui/servicevirtualizationvertx

Install jq
sudo vim /etc/apt/sources.list
Add the below line:
deb http://us.archive.ubuntu.com/ubuntu vivid main universe
sudo apt-get update
sudo apt-get install jq

Check Docker request limits:
TOKEN=$(curl --user 'username:password' "https://auth.docker.io/token?service=registry.docker.io&scope=repository:ratelimitpreview/test:pull" | jq -r .token)
Then to get the headers showing your limits, run the following:
curl --head -H "Authorization: Bearer $TOKEN" https://registry-1.docker.io/v2/ratelimitpreview/test/manifests/latest

###################################################################################################################
Deploy a private registry server
A registry is an instance of the registry image, and runs within Docker
docker run -d -p 5000:5000 --restart=always --name registry registry:2

docker pull dannyhui/servicevirtualizationservlet
docker tag dannyhui/servicevirtualizationservlet localhost:5000/servicevirtualizationservlet
docker push localhost:5000/servicevirtualizationservlet

clean up the locally-cached images
docker images
docker rmi14041314afe5 -f

###################################################################################################################
https://www.codeproject.com/Articles/1263817/How-to-Setup-Our-Own-Private-Docker-Registry
https://www.codeproject.com/Articles/1263831/How-to-secure-your-private-Docker-Registry

Create private registry with name hub.docker.local
Modify etc/hosts with the below lines:
# Private Docker Registry
127.0.0.1 hub.docker.local

Spin up a container with the docker registry image:
docker run -d -p 5000:5000 -v C:/Users/danny.hui/localhub/registry:/var/lib/registry --restart=always --name hub.local registry

Test
docker pull alpine
docker tag alpine hub.docker.local:5000/my-alpine
docker push hub.docker.local:5000/my-alpine

Remove the alpine and its tagged version
docker rmi hub.docker.local:5000/my-alpine 
docker rmi alpine

Pull the my-alpine image from your private registry.
docker pull hub.docker.local:5000/my-alpine

Spin up a container with newly downloaded image and ask the container to list out its root directory
docker run hub.docker.local:5000/my-alpine ls

Check registry catalog on this http://hub.docker.local:5000/v2/_catalog address.

Inspect the C:/Users/danny.hui/localhub/registry folder to understand how docker images are stored in the docker registry.

Stop and remove the registry container and image, my-alpine image
docker container stop hub.local
docker container rm hub.local 
docker ps -a
docker container rm container_id
docker rmi hub.docker.local:5000/my-alpine

Secure private private Docker registry
Create self-signed SSL cert under /mnt/c/Users/danny.hui/localhub/certs (Windows Terminal - Ubuntu)
openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/localhub.key -x509 -days 3650 -out certs/localhub.crt

Apply the Self-Signed Certificate to the Registry
docker run -d -p 443:443 --name local.hub -v C:/Users/danny.hui/localhub/certs:/certs -v C:/Users/danny.hui/localhub/registry:/var/lib/registry -e REGISTRY_HTTP_ADDR=0.0.0.0:443 -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/localhub.crt -e REGISTRY_HTTP_TLS_KEY=/certs/localhub.key registry

Pull and push image to the local registry
docker pull dannyhui/servicevirtualizationservlet
docker tag dannyhui/servicevirtualizationservlet hub.docker.local/servicevirtualizationservlet
docker push hub.docker.local/servicevirtualizationservlet
docker rmi hub.docker.local/servicevirtualizationservlet
docker rmi dannyhui/servicevirtualizationservlet
docker images
docker pull hub.docker.local/servicevirtualizationservlet
docker images
docker rmi hub.docker.local/servicevirtualizationservlet

Check the catalog URL https://hub.docker.local/v2/_catalog
###################################################################################################################
Alpine Linux
To enable ping command from Docker container console, add the following line to Dockerfile:
RUN apk add iputils
###################################################################################################################

