Business logic error (programming logic error): No error code. Normal response is returned to the client side.

Unexpected errors: they should not happen but they happen
  Application Runtime error: the application internal error that happens in runtime in the application we are responsible for. Category:APP_ERROR
    Examples: ArrayIndexOutOfBoundsException, NullPointerException, IllegalArgumentException, IOException (it is not a RuntimeException)
    Use generic error code identifying our app, e.g. ABC_999
  Data validation error: the error is caused by another application we are not responsible for. In other words, it is a programming error in other team's applications. 
    For example, teh database query does not returns order details record, or remote call does not return the transaction details. Using a generic error code
    idenfigying the app, e.g. DB_99, CRM_999. (However, in some cases, it is normnal business scenario where DB or remote system returns empty list.)
    Category: DATA_ERROR
  Unhandled server exception from a dependency: HTTP 500. Use error code like CRM_HTTP500. HTTP error could also come from HTTP server due to HTTP server 
    configuration error. Category: DEPENENCY_UNHANDLED_ERROR
  Missing HTTP resources: HTTP 404. (could be client side configuration error, or missing server side HTTP resources or server side application not deployed/running)
    Category: APP_ERROR
  HTTP 400: Category: APP_ERROR
  HTTP 403: Category: APP_ERROR
  
Expected errors: the erro makes sense for the business people. Use a specific error code for each case.
  User input validation error (business validation error). Category:USER_INPUT_ERROR
  Dependency handled error. Category: DEPENENCY_HANDLED_ERROR
  Remote call timeout, e.g. CRM_TIMEOUT.  Category: TIMEOUT_ERROR
  Connection error: java.net.ConnectException: Connection refused: connect. CRM_CONNECTION_REFUSED. Category: CONN_ERROR
  SSL error: certificate issues. Category: SSL_ERROR
  Authentication error HTTP 401. Category: AUTH_ERROR
  Network error: HTTP 502, 503, 504. Use erro cdoe like CRM_HTTP502, CRM_HTTP503, etc. Category: NETWORK_ERROR

Assume we are calling a API named "ABC", we may use the table below to map errors.

HTTP status   Error             User Problem?   Dev Problem?    Operation Problem?    Error Code    ABC Response body
200                                                                                                 {"id": "123", "status":"success"}
200                                                                                   ABC_ABC001    {"id": "123", "status":"false", "errorCode":"ABC001", "ErrorMessage":"Invalid amount"}
400                             N               Y               N                     ABC_HTTP400
401                             Y               Y               Y                     ABC_HTTP401           
403                             N               Y               Y                     ABC_HTTP403                                              
404                             Y               Y               N                     ABC_HTTP404
500                             N               Y               N                     ABC_HTTP500
501                             N               Y               N                     ABC_HTTP501
502                             N               N               Y                     ABC_HTTP502
503                             N               Y               Y                     ABC_HTTP503 
504                             N               N               Y                     ABC_HTTP504
            Timeout             N               N               Y                     ABC_TIMEOUT
            Unreachable         N               Y               Y                     ABC_CONN
            Connection refused  N               Y               Y                     ABC_CONN
            SSL error           N               Y               N                     
